/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package contabilidad.fomulario;

import javax.swing.JOptionPane;
import java.io.*;
import java.util.Scanner;
import javax.swing.table.DefaultTableModel;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;

/**
 *
 * @author savie
 */
public class usuario extends javax.swing.JFrame {

    /**
     * Creates new form usuario
     */
    
    private DefaultTableModel tableModel;
    public usuario() {
        initComponents();
        cargarListado();
    }
    
    

    private void cargarListado() {
        ArrayList<String[]> datosUsuarios = leerDatosUsuariosDesdeArchivo();

        String[] columnas = {"ID", "Usuario","Contrasena","Nivel Acceso", "Nombre", "Apellidos", "Email"};
        tableModel = new DefaultTableModel(columnas, 0);

        for (String[] fila : datosUsuarios) {
            tableModel.addRow(fila);
        }

        tablaUsuarios.setModel(tableModel);
    }

    private ArrayList<String[]> leerDatosUsuariosDesdeArchivo() {
        ArrayList<String[]> datosUsuarios = new ArrayList<>();
        try (BufferedReader br = new BufferedReader(new FileReader("C:\\Users\\savie\\OneDrive\\Documentos\\GitHub\\proy_contabilidad\\programa_contabilidad\\src\\contabilidad\\fomulario\\database.txt"))) {
            String linea;
            boolean esTablaUsuarios = false;
            

            while ((linea = br.readLine()) != null) {
                if (linea.trim().equals("- USUARIOS")) {
                    esTablaUsuarios = true;
                } else if (esTablaUsuarios && !linea.trim().isEmpty()) {
                    if(linea.startsWith("-")) {
                        break;
                    }
                    
                    String[] campos = linea.split("\\|");
                    datosUsuarios.add(campos);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return datosUsuarios;
    }
    
        private void limpiarCampos() {
       
           btnEdit.setVisible(false);
           btnDelete.setVisible(false);
           btnClean.setVisible(true);
           btnSave.setVisible(true);
           txtUserId.setEnabled(true);
           txtUserId.setText("");
           txtUser.setText("");
           txtPassword.setText("");
           txtName.setText("");
           txtLastName.setText("");
           txtEmail.setText("");
           cBoxAccess.setSelectedIndex(0);
           formularioTabs.setSelectedIndex(1);
    }
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        formularioTabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        cBoxAccess = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        txtUserId = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClean = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setTitle("Formulario de usuario");

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel1.setText("Usuario");

        formularioTabs.setBackground(new java.awt.Color(255, 255, 255));
        formularioTabs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formularioTabsMouseClicked(evt);
            }
        });

        tablaUsuarios.setAutoCreateRowSorter(true);
        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Usuario", "Nivel Acceso", "Nombre", "Apellido", "Correo"
            }
        ));
        tablaUsuarios.setColumnSelectionAllowed(true);
        tablaUsuarios.setFillsViewportHeight(true);
        tablaUsuarios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaUsuarios.getTableHeader().setReorderingAllowed(false);
        tablaUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaUsuariosMouseClicked(evt);
            }
        });
        tablaUsuarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaUsuariosKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablaUsuarios);
        tablaUsuarios.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(59, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        formularioTabs.addTab("Listado", jPanel1);

        cBoxAccess.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Usuario" }));
        cBoxAccess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cBoxAccessActionPerformed(evt);
            }
        });

        jLabel2.setText("Usuario");

        jLabel3.setText("Contrase√±a");

        jLabel4.setText("Nombre ");

        jLabel5.setText("Nivel Acceso");

        jLabel6.setText("Apellidos");

        jLabel7.setText("Correo");

        txtUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserActionPerformed(evt);
            }
        });

        txtLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastNameActionPerformed(evt);
            }
        });

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        btnSave.setText("Agregar");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        txtUserId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserIdActionPerformed(evt);
            }
        });

        jLabel8.setText("Id");

        btnEdit.setText("Editar");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("Eliminar");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClean.setText("Limpiar");
        btnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });

        btnExit.setText("Salir");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLayeredPane1.setLayer(cBoxAccess, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtPassword, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtUser, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtLastName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtEmail, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btnSave, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtUserId, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btnEdit, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btnDelete, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btnClean, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btnExit, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUserId, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtPassword)
                                .addComponent(cBoxAccess, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(71, 71, 71)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClean, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUserId, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(25, 25, 25)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cBoxAccess, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClean, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55))
        );

        formularioTabs.addTab("Formulario", jLayeredPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(formularioTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 937, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(formularioTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserActionPerformed

    private void txtLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastNameActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void cBoxAccessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cBoxAccessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cBoxAccessActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
   
             String username = txtUser.getText();
        if (!username.matches("[A-Za-z0-9]+")) {
           JOptionPane.showMessageDialog(null, "EL usuario inv√°lido");
           return;
        } 
        
             String password = txtPassword.getText();
        if (password.length() < 5) {
            JOptionPane.showMessageDialog(null, "Contrase√±a debe tener al menos 5 caracteres");
            return;
        }
       
        
             String firstName = txtName.getText();
        if (!firstName.matches("[A-Za-z]+")) {
             JOptionPane.showMessageDialog(null, "El nombre es inv√°lido");
            return;
        }
   
         
             String lastName = txtLastName.getText();
        if (!lastName.matches("[A-Za-z]+")) {
             JOptionPane.showMessageDialog(null, "El apellido es inv√°lido");
            return;
         }
           
        
              String email = txtEmail.getText();
         if (!email.matches("^[A-Za-z0-9+_.-]+@(.+)$")) {
             JOptionPane.showMessageDialog(null, "El correo es inv√°lido");
            return;
         }
        
        
        int RolAccessIndex =  cBoxAccess.getSelectedIndex();
        String RolAccess = String.valueOf(RolAccessIndex);
        
      File file = new File("C:\\Users\\savie\\OneDrive\\Documentos\\GitHub\\proy_contabilidad\\programa_contabilidad\\src\\contabilidad\\fomulario\\database.txt");
        try {
            Scanner scanner = new Scanner(file);
            StringBuilder content = new StringBuilder();
            boolean usersSection = false;
            int lastUserId = 0;

            while (scanner.hasNextLine()) {
                String line = scanner.nextLine().trim();
                content.append(line).append("\n");

                if (line.trim().equals("- USUARIOS")) {
                    usersSection = true;
                } else if (usersSection && !line.trim().isEmpty() && !line.startsWith("-")) {
                    String[] fields = line.split("\\|");
                    if (fields.length >= 1) {
                        try {
                            int userId = Integer.parseInt(fields[0]);
                            lastUserId = Math.max(lastUserId, userId);
                        } catch (NumberFormatException e) {
                            // Manejar errores de conversi√≥n (por ejemplo, si el ID no es un n√∫mero v√°lido)
                            System.err.println("Error al convertir el ID de usuario: " + e.getMessage());
                        }
                    }
                }
            }

            // Generar el nuevo ID de usuario
            int newUserId = lastUserId + 1;
            String userIdAsString = String.valueOf(newUserId);

            // Crear la nueva entrada de usuario (reemplaza con los valores reales)
            String newUserEntry = String.format("%s"+"|"+txtUser.getText()+"|"+txtPassword.getText()+"|"+RolAccess+"|"+txtName.getText()+"|"+txtLastName.getText()+"|"+txtEmail.getText()+"\n", userIdAsString);

            // Insertar la nueva entrada despu√©s del √∫ltimo registro de usuarios
            int usersIndex = content.indexOf("- USUARIOS");
            int usersEndIndex = content.indexOf("- ", usersIndex + 1);
            content.insert(usersEndIndex, newUserEntry);

            // Escribir los datos actualizados en el archivo
            FileWriter writer = new FileWriter(file);
            writer.write(content.toString());
            writer.close();

            System.out.println("Nuevo usuario con ID " + userIdAsString + " ha sido agregado a la secci√≥n USUARIOS en 'database.txt'.");
              JOptionPane.showMessageDialog(null, "Usuario creado correctamente");
              
              txtUser.setText("");
              txtPassword.setText("");
        } catch (FileNotFoundException e) {
            System.err.println("Error: El archivo 'database.txt' no se encontr√≥.");
        } catch (IOException e) {
            System.err.println("Error al escribir en el archivo 'database.txt'.");
        }
    
    }//GEN-LAST:event_btnSaveActionPerformed

    private void tablaUsuariosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaUsuariosKeyPressed
      
    }//GEN-LAST:event_tablaUsuariosKeyPressed

    private void tablaUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaUsuariosMouseClicked
       
         
         DefaultTableModel tm = (DefaultTableModel) tablaUsuarios.getModel();
         
         String dato = String.valueOf(tm.getValueAt(tablaUsuarios.getSelectedRow(), 0));
         
           btnEdit.setVisible(true);
           btnDelete.setVisible(true);
           btnClean.setVisible(false);
           btnSave.setVisible(false);
           txtUserId.setEnabled(false);
           
           txtUserId.setText(String.valueOf(tm.getValueAt(tablaUsuarios.getSelectedRow(), 0)));
           txtUser.setText(String.valueOf(tm.getValueAt(tablaUsuarios.getSelectedRow(), 1)));
           txtPassword.setText(String.valueOf(tm.getValueAt(tablaUsuarios.getSelectedRow(), 2)));
           txtName.setText(String.valueOf(tm.getValueAt(tablaUsuarios.getSelectedRow(), 4)));
           txtLastName.setText(String.valueOf(tm.getValueAt(tablaUsuarios.getSelectedRow(), 5)));
           txtEmail.setText(String.valueOf(tm.getValueAt(tablaUsuarios.getSelectedRow(), 6)));
           cBoxAccess.setSelectedIndex(Integer.parseInt( String.valueOf(tm.getValueAt(tablaUsuarios.getSelectedRow(), 3))));
           formularioTabs.setSelectedIndex(1);
         
    }//GEN-LAST:event_tablaUsuariosMouseClicked

    private void txtUserIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserIdActionPerformed

    private void formularioTabsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formularioTabsMouseClicked
        if(formularioTabs.getSelectedIndex()==0){
            cargarListado();
        }
        
        if( formularioTabs.getSelectedIndex()==1){
          limpiarCampos();
        
        }
    }//GEN-LAST:event_formularioTabsMouseClicked

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
     // Ruta del archivo database.txt (ajusta esto seg√∫n tu ubicaci√≥n)
    String filePath = "C:\\Users\\savie\\OneDrive\\Documentos\\GitHub\\proy_contabilidad\\programa_contabilidad\\src\\contabilidad\\fomulario\\database.txt";

    // ID del usuario que deseas actualizar (reemplaza con el valor correcto)
    int userIdToUpdate =  Integer.parseInt(txtUserId.getText());

    String newUsername = txtUser.getText();
    String newPassword = txtPassword.getText();
    String newFirstName = txtName.getText();
    String newLastName = txtLastName.getText();
    String newEmail = txtEmail.getText();
    int newRolAccessIndex = cBoxAccess.getSelectedIndex();
    String newRolAccess = String.valueOf(newRolAccessIndex);

    try {
        File file = new File(filePath);
        Scanner scanner = new Scanner(file);
        StringBuilder content = new StringBuilder();
        boolean usersSection = false;

        while (scanner.hasNextLine()) {
            String line = scanner.nextLine().trim();

            if (line.trim().equals("- USUARIOS")) {
                usersSection = true;
            } else if (usersSection && !line.trim().isEmpty() && !line.startsWith("-")) {
                String[] fields = line.split("\\|");
                if (fields.length >= 1) {
                    try {
                        int userId = Integer.parseInt(fields[0]);
                        if (userId == userIdToUpdate) {
                            // Modificar la l√≠nea con los nuevos datos
                            line = String.format("%s|%s|%s|%s|%s|%s|%s",
                                    userId, newUsername, newPassword, newRolAccess, newFirstName, newLastName, newEmail);
                            
                               JOptionPane.showMessageDialog(null, "Usuario actualizado correctamente");
              
                        }
                    } catch (NumberFormatException e) {
                        System.err.println("Error al convertir el ID de usuario: " + e.getMessage());
                    }
                }
            }
            content.append(line).append("\n");
        }

        // Escribir los datos actualizados en el archivo
        FileWriter writer = new FileWriter(file);
        writer.write(content.toString());
        writer.close();

        System.out.println("Usuario con ID " + userIdToUpdate + " actualizado correctamente.");
    } catch (IOException e) {
        System.err.println("Error al leer o escribir en el archivo: " + e.getMessage());
    }
    
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
    // Ruta del archivo database.txt (ajusta esto seg√∫n tu ubicaci√≥n)
    String filePath = "C:\\Users\\savie\\OneDrive\\Documentos\\GitHub\\proy_contabilidad\\programa_contabilidad\\src\\contabilidad\\fomulario\\database.txt";

    // ID del usuario que deseas eliminar (reemplaza con el valor correcto)
    int userIdToDelete = Integer.parseInt(txtUserId.getText());

    try {
        File file = new File(filePath);
        Scanner scanner = new Scanner(file);
        StringBuilder content = new StringBuilder();
        boolean usersSection = false;

        while (scanner.hasNextLine()) {
            String line = scanner.nextLine().trim();

            if (line.trim().equals("- USUARIOS")) {
                usersSection = true;
            } else if (usersSection && !line.trim().isEmpty() && !line.startsWith("-")) {
                String[] fields = line.split("\\|");
                if (fields.length >= 1) {
                    try {
                        int userId = Integer.parseInt(fields[0]);
                        if (userId == userIdToDelete) {
                            // Si el ID del usuario coincide con el que queremos eliminar, no agregamos la l√≠nea al contenido
                                JOptionPane.showMessageDialog(null, "Usuario eliminado correctamente");
                                limpiarCampos();
                            continue;
                          
                        }
                      
        
                        
                    } catch (NumberFormatException e) {
                        System.err.println("Error al convertir el ID de usuario: " + e.getMessage());
                    }
                }
            }
            // Agregamos la l√≠nea al contenido (excepto si es la l√≠nea que queremos eliminar)
            content.append(line).append("\n");
        }

        // Escribir los datos actualizados en el archivo
        FileWriter writer = new FileWriter(file);
        writer.write(content.toString());
        writer.close();

        System.out.println("Usuario con ID " + userIdToDelete + " eliminado correctamente.");
    } catch (IOException e) {
        System.err.println("Error al leer o escribir en el archivo: " + e.getMessage());
    }
        
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        limpiarCampos();        // TODO add your handling code here:
    }//GEN-LAST:event_btnCleanActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new usuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClean;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cBoxAccess;
    private javax.swing.JTabbedPane formularioTabs;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaUsuarios;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUser;
    private javax.swing.JTextField txtUserId;
    // End of variables declaration//GEN-END:variables
}
